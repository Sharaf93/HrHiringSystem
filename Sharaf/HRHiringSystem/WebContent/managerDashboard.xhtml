<!DOCTYPE HTML>
<html xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:f="http://java.sun.com/jsf/core" xmlns:h="http://java.sun.com/jsf/html">
<h:head>
<title>Manager Dashboard</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
<meta charset="utf-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>

<script src="resources/gentelella-master/vendors/Flot/jquery.js"></script>
<link href="resources/gentelella-master/vendors/bootstrap-progressbar/css/bootstrap-progressbar-3.3.4.min.css" rel="stylesheet"/>
<link href="resources/gentelella-master/vendors/jqvmap/dist/jqvmap.min.css" rel="stylesheet"/>
<link href="resources/gentelella-master/build/css/custom.min.css" rel="stylesheet"/>

</h:head>
<h:body class="nav-md">

<ui:composition template="/GeneralTemplate.xhtml">
<ui:define name="title"><title>Manager Dashboard</title></ui:define>
<ui:define name="content">

<div class="col-sm-9 col-sm-offset-3 col-lg-10 col-lg-offset-2 main">			


    <div class="container body">
      <div class="main_container">
		
	<!-- page content -->
        <div class="right_col" role="main">
          <div class="">
          
            <br />

            <div class="row">
            
            <h:form id="dateAndEmployeeForm">
               <h:inputHidden id="startDateHidden" value = "#{pc_managerDashboard.startDate}">
               <f:convertDateTime pattern="yyyy-MM-dd"></f:convertDateTime></h:inputHidden>
               <h:inputHidden id="endDateHidden" value = "#{pc_managerDashboard.endDate}">
               <f:convertDateTime pattern="yyyy-MM-dd"></f:convertDateTime></h:inputHidden>
             <div class="col-md-10">
                <div id="reportrange" class="pull-right" style="background: #fff; cursor: pointer; padding: 5px 10px; border: 1px solid #ccc">
                  <i class="glyphicon glyphicon-calendar fa fa-calendar"></i>
                  <span></span> <b class="caret"></b>
                </div>
                  
                  
                 <ul class="nav nav-pills" role="tablist">
                 
                  <li role="presentation" class="dropdown">                   
                       <h:outputLabel>
                       HR Employee </h:outputLabel>
                       <h:selectOneMenu id="dropdownemployee" value= "#{pc_managerDashboard.chosenEmployee}"
                       valueChangeListener="#{pc_managerDashboard.setHrSourceDropdownValue}">
                       <f:selectItems value ="#{pc_managerDashboard.employeesDropdown}"></f:selectItems>
                       <f:ajax execute="dropdownemployee"/>
                       </h:selectOneMenu>
                 </li>  
                    
                    
               	</ul>
              </div>
              <h:inputText id="inputButton" type="button" value ="Submit" readonly="true" class="btn btn-primary" style="width:100px;" onclick="return render()"></h:inputText>
             </h:form>
              
           
              
			<div class="clearfix"></div>
			<BR />
						
		
			<div class="col-lg-8 col-md-12 col-sm-12 col-xs-12">
				<div class="x_panel">
                  <div class="x_title">
                    <h2>Fail Analysis <small>Per Phases</small></h2>
                    <ul class="nav navbar-right panel_toolbox">
                      <li><a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                      </li>
                      <li><a class="close-link"><i class="fa fa-close"></i></a>
                      </li>
                    </ul>
                    <div class="clearfix"></div>
                  </div>
                  <div class="x_content">
                    <canvas id="mybarChart"></canvas>
                  </div>
                </div>
              </div>


			
              <div class="col-lg-4 col-md-6 col-sm-12 col-xs-12">
                <div class="x_panel">
                  <div class="x_title">
                    <h2>Pending Candidates <SMALL>/ Phases</SMALL></h2>
                    <ul class="nav navbar-right panel_toolbox">
                      <li><a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                      </li>
                      <li><a class="close-link"><i class="fa fa-close"></i></a>
                      </li>
                    </ul>
                    <div class="clearfix"></div>
                  </div>
                  <div class="x_content">
                    <div id="echart_pie2" style="height:350px;"></div>
                  </div>
                </div>
              </div>
         
              <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
				<div class="x_panel">
                  <div class="x_title">
                    <h2>Pass Analysis <small>Per Positions</small></h2>
                    <ul class="nav navbar-right panel_toolbox">
                      <li><a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                      </li>
                      <li><a class="close-link"><i class="fa fa-close"></i></a>
                      </li>
                    </ul>
                    <div class="clearfix"></div>
                  </div>
                  <div class="x_content">
                    <canvas id="mybarChart2"></canvas>
                  </div>
                </div>
              </div>
              
           
              <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">
                  <div class="x_title">
                    <h2>Reasons of Failure <small>(Sources)</small></h2>
                    <ul class="nav navbar-right panel_toolbox">
                      <li><a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                      </li>
                      <li><a class="close-link"><i class="fa fa-close"></i></a>
                      </li>
                    </ul>
                    <div class="clearfix"></div>
                  </div>
			<ul class="nav nav-pills" role="tablist">
			
              	<h:form id="positionAndPhaseForm">
              	
              	 <li role="presentation" class="dropdown">                   
                       <h:outputLabel>
                       Position</h:outputLabel>
                       <h:selectOneMenu id="dropdownposition" value= "#{pc_managerDashboard.chosenPosition}"
                       valueChangeListener="#{pc_managerDashboard.setPositionCompoundGraph}">
                       <f:selectItems value ="#{pc_managerDashboard.positionsDropdown}"></f:selectItems>
                       <f:ajax execute="dropdownposition"/>
                       </h:selectOneMenu>
                 </li>                  
                 
                 <li role="presentation" class="dropdown">                   
                       <h:outputLabel >
                       Phase</h:outputLabel>
                       <h:selectOneMenu id="dropdownphase" value= "#{pc_managerDashboard.chosenPhase}"
                       valueChangeListener="#{pc_managerDashboard.setPhaseCompoundGraph}">
                       <f:selectItems value ="#{pc_managerDashboard.phasesDropdown}"></f:selectItems>
                       <f:ajax execute="dropdownphase"/>
                       </h:selectOneMenu>
                 </li>
                 <h:inputText id="buttonPositionPhase" type="button" value ="Submit" readonly="true" class="btn btn-primary" style="width:80px; height:20px;" onclick="return render()"></h:inputText>
                 </h:form>
                 
            </ul>
                    <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
                    	<div class="x_content2">
                    	<!-- <h:panelGroup id="graph_donut" layout="block" style="width:100%; height:300px;"/> -->
                    		<div id="graph_donut" style=" top:-65px; width:100%; height:450px;"></div>
                  		</div>
                  	</div>
                  	<div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
                  		<div class="x_content">
                    		<div id="echart_pie" style=" top:-65px; width:100%; height:450px;"></div>
                  		</div>
                  	</div>
                </div>
              </div>
              
              
            
              <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
                <div class="x_panel">
                  <div class="x_title">
                    <h2>Sources <small>Per Period</small></h2>
                    <ul class="nav navbar-right panel_toolbox">
                      <li><a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                      </li>
                      <li class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"><i class="fa fa-wrench"></i></a>
                        <ul class="dropdown-menu" role="menu">
                          <li><a href="#">Pass</a>
                          </li>
                          <li><a href="#">Fail</a>
                          </li>
                        </ul>
                      </li>
                      <li><a class="close-link"><i class="fa fa-close"></i></a>
                      </li>
                    </ul>
                    <div class="clearfix"></div>
                  </div>
                  <div class="x_content">
                    <div id="echart_donut" style="height:450px;"></div>
                  </div>
                </div>
              </div>
    
            </div>
            
          </div>
        </div>
        <!-- /page content -->
        
        </div>
        </div>

</div>
</ui:define>

<ui:define name="script_links">

<script src="resources/gentelella-master/vendors/Chart.js/dist/Chart.min.js"></script>
<script src="resources/gentelella-master/vendors/gauge.js/dist/gauge.min.js"></script>
<script src="resources/gentelella-master/vendors/skycons/skycons.js"></script>
<script src="resources/gentelella-master/vendors/DateJS/build/date.js"></script>
<script src="resources/gentelella-master/vendors/bootstrap-daterangepicker/daterangepicker.js"></script>
<script src="resources/gentelella-master/vendors/echarts/dist/echarts.min.js"></script>
<script src="resources/gentelella-master/vendors/echarts/map/js/world.js"></script>
<script src="resources/gentelella-master/vendors/jquery.easy-pie-chart/dist/angular.easypiechart.js"></script>
<script src="resources/gentelella-master/vendors/jquery.easy-pie-chart/dist/easypiechart.js"></script>
<script src="resources/gentelella-master/vendors/jquery.easy-pie-chart/dist/jquery.easypiechart.js"></script>
<script src="resources/gentelella-master/vendors/jquery.easy-pie-chart/src/angular.directive.js"></script>
<script src="resources/gentelella-master/vendors/jquery.easy-pie-chart/src/easypiechart.js"></script>
<script src="resources/gentelella-master/vendors/jquery.easy-pie-chart/src/jquery.plugin.js"></script>
<script src="resources/gentelella-master/vendors/jquery.easy-pie-chart/Gruntfile.js"></script>

<script src="resources/gentelella-master/vendors/raphael/raphael.min.js"></script>

<script src="resources/gentelella-master/vendors/morris.js/morris.min.js"></script>



<!--  Main Function that renders all the graphs based on HrID and Date -->
<script type="text/javascript">
function render(){
       var hrId = document.getElementById("dateAndEmployeeForm:dropdownemployee").value;
       var startDate = document.getElementById("dateAndEmployeeForm:startDateHidden").value;
       var endDate = document.getElementById("dateAndEmployeeForm:endDateHidden").value;
       var position = document.getElementById("positionAndPhaseForm:dropdownposition").value;
       var phase = document.getElementById("positionAndPhaseForm:dropdownphase").value;
        $.ajax({
		     type: "GET",
		     url: 'http://localhost:9082/HRHiringSystem/rest/graph/PositionPhase/'+hrId+'/'+ startDate+'/'+endDate+'/'+position+'/'+phase, 
		     crossDomain:true,
		     contentType: "application/json; charset=utf-8",
		     dataType: "json",
		     success: OnSuccess,
		     error: OnFail
		 });
      	function OnSuccess(data){
	  	var jsonStringfy = JSON.stringify(data);
	  	var jsonArray = JSON.parse(jsonStringfy);
	  	jsonObjectReasonsOfFailure(jsonArray[0]);
	  	jsonObjectSources(jsonArray[1]);
	  	
      }      
      function OnFail(data){
	    alert("Error: "+data.status);
     }
     
     function resetSources(){
		facebook=0;
		wuzzuf=0;
		referral=0;
		linkedin=0;
		guc=0;
		msa=0;
		companyWebsite=0;
		americanChamber=0;
		scad=0;
	}
	function jsonObjectSources(jsonArray){
		resetSources();
		for(var i in jsonArray){
	  		var obj = jsonArray[i];
	  		var name = obj.name;
	  		if(name === "Facebook"){
	  			facebook = obj.count;
	  		}
	  		if(name === "Wuzzuf"){
	  			wuzzuf = obj.count;
	  		}
	  		if(name === "Referral"){
	  			referral = obj.count;
	  		}
	  		if(name === "LinkedIn"){
	  			linkedin = obj.count;
	  		}
	  		if(name === "GUC-Employment Fair"){
	  			guc = obj.count;
	  		}
	  		if(name === "MSA-Employment Fair"){
	  			msa = obj.count;
	  		}
	  		if(name === "Company Website"){
	  			companyWebsite = obj.count;
	  		}
	  		if(name === "American Chamber"){
	  			americanChamber = obj.count;
	  		}
	  		if(name === "GUC-SCAD"){
	  			scad = obj.count;
	  		}
  		}
 		donutChartSources();
	}
	
	
	function resetReasonsOfFailure(){
		irrelevant=0;
		outOfCountry=0;
		interest=0;
		language=0;
		culture=0;
		communicationSkills=0;
		expectedSalary=0;
		gender=0;
		overqualified=0;
		age=0;
		attitude=0;
		technicalCompetence=0;
	}
	function jsonObjectReasonsOfFailure(jsonArray){
		resetReasonsOfFailure();
		for(var i in jsonArray){
	  		var obj = jsonArray[i];
	  		var name = obj.name;
	  		if(name === "Irrelevant Experience"){
	  			irrelevant = obj.count;
	  		}
	  		if(name === "Out of The Country"){
	  			outOfCountry = obj.count;
	  		}
	  		if(name === "Interest"){
	  			interest = obj.count;
	  		}
	  		if(name === "Language"){
	  			language = obj.count;
	  		}
	  		if(name === "Culture"){
	  			culture = obj.count;
	  		}
	  		if(name === "Communication Skills"){
	  			communicationSkills = obj.count;
	  		}
	  		if(name === "Expected Salary"){
	  			expectedSalary = obj.count;
	  		}
	  		if(name === "Gender"){
	  			gender = obj.count;
	  		}
	  		if(name === "Overqualified"){
	  			overqualified = obj.count;
	  		}
	  		if(name === "Age"){
	  			age = obj.count;
	  		}
	  		if(name === "Attitude"){
	  			attitude = obj.count;
	  		}
	  		if(name === "Technical Competence"){
	  			technicalCompetence = obj.count;
	  		}
  		}
  		pieChartReasonsOfFailure();	
	}
</script>
<SCRIPT type="text/javascript">    
      function render(){
       var hrId = document.getElementById("dateAndEmployeeForm:dropdownemployee").value;
       var startDate = document.getElementById("dateAndEmployeeForm:startDateHidden").value;
       var endDate = document.getElementById("dateAndEmployeeForm:endDateHidden").value;
        $.ajax({
		     type: "GET",
		     url: 'http://localhost:9082/HRHiringSystem/rest/graph/Test/'+hrId+'/'+ startDate+'/'+endDate, 
		     crossDomain:true,
		     contentType: "application/json; charset=utf-8",
		     dataType: "json",
		     success: OnSuccess,
		     error: OnFail
		 });
      
      }
      
      function OnSuccess(data){
	  	var jsonStringfy = JSON.stringify(data);
	  	var jsonArray = JSON.parse(jsonStringfy);
	  	jsonObjectFailAnalysis(jsonArray[0]);
	  	jsonObjectPendingAnalysis(jsonArray[1]);
	  	jsonObjectPassAnalysis(jsonArray[2]);
	  	jsonObjectSourcesPass(jsonArray[3]);
	  	
	  	//for(var i in jsonArray){
	  		//console.log(i);
	  		//var obj = jsonArray[i];
	  		//console.log(obj);
	  	//}
      }
	  	
      
      function OnFail(data){
	    alert("Error: "+data.status +"\nPlease Specify a Date");
     }
</SCRIPT>


<script>
	function resetSourcesPass(){
		facebookPass=0;
		wuzzufPass=0;
		referralPass=0;
		linkedinPass=0;
		gucPass=0;
		msaPass=0;
		companyWebsitePass=0;
		americanChamberPass=0;
		scadPass=0;
	}
	function jsonObjectSourcesPass(jsonArray){
		resetSourcesPass();
		for(var i in jsonArray){
	  		var obj = jsonArray[i];
	  		var name = obj.name;
	  		if(name === "Facebook"){
	  			facebookPass = obj.count;
	  		}
	  		if(name === "Wuzzuf"){
	  			wuzzufPass = obj.count;
	  		}
	  		if(name === "Referral"){
	  			referralPass = obj.count;
	  		}
	  		if(name === "LinkedIn"){
	  			linkedinPass = obj.count;
	  		}
	  		if(name === "GUC-Employment Fair"){
	  			gucPass = obj.count;
	  		}
	  		if(name === "MSA-Employment Fair"){
	  			msaPass = obj.count;
	  		}
	  		if(name === "Company Website"){
	  			companyWebsitePass = obj.count;
	  		}
	  		if(name === "American Chamber"){
	  			americanChamberPass = obj.count;
	  		}
	  		if(name === "GUC-SCAD"){
	  			scadPass = obj.count;
	  		}
  		}
  		donutGraphSourcesPass();		
	}
</script>

<script>
	function resetFailAnalysis(){
		cvFail = 0;
		phoneFail = 0;
		examsFail = 0;
		hrFail = 0;
		technicalFail = 0;
		presentationFail =0;
	}
    function jsonObjectFailAnalysis(jsonArray){
    	resetFailAnalysis();
     	for(var i in jsonArray){
	  		var obj = jsonArray[i];
	  		var name = obj.name;
	  		if(name === "CV Screening"){
	  			cvFail = obj.count;
	  		}
	  		if(name === "Phone Interview"){
	  			phoneFail = obj.count;
	  		}
	  		if(name === "Functional, English and IQ Tests"){
	  			examsFail = obj.count;
	  		}
	  		if(name === "HR Interview"){
	  			hrFail = obj.count;
	  		}
	  		if(name === "Functional Interview (Technical)"){
	  			technicalFail = obj.count;
	  		}
	  		if(name === "Presentation"){
	  			presentationFail = obj.count;
	  		}
	  	}
	  	barGraphFailAnalysis();	  	
    }
    
    
    function resetPendingAnalysis(){
		cvPending = 0;
		phonePending =0;
		examsPending =0;
		hrPending =0;
		technicalPending =0;
		presentationPending =0;
	}    
    function jsonObjectPendingAnalysis(jsonArray){
    	resetPendingAnalysis();
    	for(var i in jsonArray){
    		var obj = jsonArray[i];
			var name = obj.name;
	  		if(name === "CV Screening"){
	  			cvPending = obj.count;
	  		}
	  		if(name === "Phone Interview"){
	  			phonePending = obj.count;
	  		}
	  		if(name === "Functional, English and IQ Tests"){
	  			examsPending = obj.count;
	  		}
	  		if(name === "HR Interview"){
	  			hrPending = obj.count;
	  		}
	  		if(name === "Functional Interview (Technical)"){
	  			technicalPending = obj.count;
	  		}
	  		if(name === "Presentation"){
	  			presentationPending = obj.count;
	  		}
    	}
    	pieGraphPendingAnalysis();
    }
</script>

<script>
function resetPassAnalysis(){
    sep=0;
    ssep=0;
    sssep=0;
    apmp=0;
    pmp=0;
    astep=0;
    step=0;
    assep=0;
    msp=0;
    jap=0;
    iap=0;
    sep2=0;
    sip=0;
    ssep2=0;
    sssep2=0;
  	bap=0;
  	pep=0;
  	hap=0;
  	hep=0;
  	hsp=0;
  	mep=0;
  	samp=0;
  	sap=0;
  	siap=0;
  	hip=0;
    }
    function jsonObjectPassAnalysis(jsonArray){
    	resetPassAnalysis();
    	for(var i in jsonArray){
    		var obj = jsonArray[i];
    		var name = obj.name;
	  		if(name === "Software Engineer"){
	  			sep = obj.count;
	  		}
	  		if(name === "Staff Software Engineer"){
	  			ssep = obj.count;
	  		}
	  		if(name === "Senior Staff Software Engineer"){
	  			sssep = obj.count;
	  		}
	  		if(name === "Associate Project Manager"){
	  			apmp = obj.count;
	  		}
	  		if(name === "Project Manager"){
	  			pmp = obj.count;
	  		}
	  		if(name === "Associate Software Test Engineer"){
	  			astep = obj.count;
	  		}
	  		if(name === "Software Test Engineer"){
	  			step = obj.count;
	  		}
	  		if(name === "Associate Software Support Engineer"){
	  			assep = obj.count;
	  		}
	  		if(name === "Marketing Specialist"){
	  			msp = obj.count;
	  		}
	  		if(name === "Junior Accountant"){
	  			jap = obj.count;
	  		}
	  		if(name === "IT Admin"){
	  			iap = obj.count;
	  		}
	  		if(name === "Systems Engineer"){
	  			sep2 = obj.count;
	  		}
	  		if(name === "Software Intern"){
	  			sip = obj.count;
	  		}
	  		if(name === "Software Support Engineer"){
	  			ssep2 = obj.count;
	  		}
	  		if(name === "Staff Software Support Engineer"){
	  			sssep2 = obj.count;
	  		}
	  		if(name === "Business Analyst"){
	  			bab = obj.count;
	  		}
	  		if(name === "Presales Engineer"){
	  			pep = obj.count;
	  		}
	  		if(name === "HR Associate"){
	  			hap = obj.count;
	  		}
	  		if(name === "HR Executive"){
	  			hep = obj.count;
	  		}
	  		if(name === "HR Specialist"){
	  			hsp = obj.count;
	  		}
	  		if(name === "Marketing Executive"){
	  			mep = obj.count;
	  		}
	  		if(name === "Sales Account Manager"){
	  			samp = obj.count;
	  		}
	  		if(name === "Senior Accountant"){
	  			sap = obj.count;
	  		}
	  		if(name === "Senior IT Admin"){
	  			siap = obj.count;
	  		}
	  		if(name === "HR Intern"){
	  			hip = obj.count;
	  		}
	  	}
	  	barGraphPassAnalysis();
    }
</script>


    <!-- bootstrap-daterangepicker -->
<script type="text/javascript">
var startDate;
var endDate;

  $(document).ready(function() {

    var cb = function(start, end, label) {
      console.log(start.toISOString(), end.toISOString(), label);     
      $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
    };
    var date = new Date();
    var thisYear = date.getFullYear();
	var Q1A = new Date("January, 1 " +thisYear);
	var Q1B = new Date("March, 31 " +thisYear);
	var Q2A = new Date("April, 1 " +thisYear);
	var Q2B = new Date("June, 30 " +thisYear);
	var Q3A = new Date("July, 1 " +thisYear);
	var Q3B = new Date("September, 30 " +thisYear);
	var Q4A = new Date("October, 1 " +thisYear);
	var Q4B = new Date("December, 31 " +thisYear);
    var optionSet1 = {
      startDate: Q1A,
      endDate: Q4B,
      minDate: '01/01/2010',
      maxDate: '12/31/2050',
      dateLimit: {
        days: 3650
      },
      showDropdowns: true,
      showWeekNumbers: true,
      timePicker: false,
      timePickerIncrement: 1,
      timePicker12Hour: true,
      ranges: {
        'Q1': [Q1A,Q1B],
        'Q2': [Q2A,Q2B],
        'Q3': [Q3A,Q3B],
        'Q4': [Q4A,Q4B],
        'This Year': [Q1A,Q4B]
      },
      opens: 'left',
      buttonClasses: ['btn btn-default'],
      applyClass: 'btn-small btn-primary',
      cancelClass: 'btn-small',
      format: 'MM/DD/YYYY',
      separator: ' to ',
      locale: {
        applyLabel: 'Submit',
        cancelLabel: 'Clear',
        fromLabel: 'From',
        toLabel: 'To',
        customRangeLabel: 'Custom',
        daysOfWeek: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
        monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
        firstDay: 1
      }
    };
    //$('#reportrange span').html(moment().format('MMMM DD, YYYY') + ' - ' + moment().format('MMMM DD, YYYY'));
    $('#reportrange').daterangepicker(optionSet1, cb);
    $('#reportrange').on('show.daterangepicker', function() {
      console.log("show event fired");
    });
    $('#reportrange').on('hide.daterangepicker', function() {
      console.log("hide event fired");
    });
    $('#reportrange').on('apply.daterangepicker', function(ev, picker) {
      console.log("apply event fired, start/end dates are " + picker.startDate.format('MMMM D, YYYY') + " to " + picker.endDate.format('MMMM D, YYYY'));
      document.getElementById("dateAndEmployeeForm:startDateHidden").value = picker.startDate.format('YYYY-MM-DD');
      document.getElementById("dateAndEmployeeForm:endDateHidden").value = picker.endDate.format('YYYY-MM-DD');
    });
    $('#reportrange').on('cancel.daterangepicker', function(ev, picker) {
      console.log("cancel event fired");
    });
    $('#options1').click(function() {
      $('#reportrange').data('daterangepicker').setOptions(optionSet1, cb);
    });
    $('#options2').click(function() {
      $('#reportrange').data('daterangepicker').setOptions(optionSet2, cb);
    });
    $('#destroy').click(function() {
      $('#reportrange').data('daterangepicker').remove();
    });
  });
</script>
<!-- /bootstrap-daterangepicker -->	

<!-- Chart.js -->
<script>
  Chart.defaults.global.legend = {
    enabled: false
  };

  
  $(function(){
	render();
    barGraphFailAnalysis();
    pieGraphPendingAnalysis();
    barGraphPassAnalysis();
    donutGraphSourcesPass();
    donutChartSources();
    pieChartReasonsOfFailure();
   });
 
  // Bar chart for Fail Analysis
  var cvFail;
  var phoneFail;
  var examsFail;
  var hrFail;
  var technicalFail;
  var presentationFail;
  function barGraphFailAnalysis(){
	  var ctx = document.getElementById("mybarChart");
	  var mybarChart = new Chart(ctx, {
	    type: 'bar',
	    data: {
	      labels: ["CV Screening", "Phone Intrview", "Technical Exams", "HR Interview", "Technical Interview", "Presentation"],
	      datasets: [{
	        label: '# of Fail',
	        backgroundColor: "#03586A",
	        data: [cvFail, phoneFail, examsFail, hrFail, technicalFail, presentationFail]
	      }]
	    },
	    options: {
	      scales: {
	        yAxes: [{
	          ticks: {
	            beginAtZero: true
	          }
	        }]
	      }
	    }
	  });
  }
  
  
  //Bar Graph for Pass Analysis
  var sep,ssep,sssep,apmp,pmp,astep,step,assep,msp,jap,iap,sep2,sip,ssep2,sssep2;
  var bap,pep,hap,hep,hsp,mep,samp,sap,siap,hip;
  function barGraphPassAnalysis(){
	  var ctx = document.getElementById("mybarChart2");
	  var mybarChart = new Chart(ctx, {
	    type: 'bar',
	    data: {
	      labels: ["Software Engineer", "Staff Software Engineer", "Senior Staff Software Engineer", 
	      "Associate Project Manager", "Project Manager", "Associate Software Test Engineer", 
	      "Software Test Engineer", "Associate Software Support Engineer", "Marketing Specialist",
	      "Junior Accountant", "IT Admin", "Systems Engineer",
	      "Software intern", "Software Support Engineer","Staff Software support engineer",
	      "Business Analyst", "Presales Engineer","HR Associate",
	      "HR Executive","HR Specialist","Marketing Executive",
	      "Sales Account Manager", "Senior Accountant","Senior IT Admin",
	      "HR Intern"],
	      datasets: [{
	        label: '# of Pass',
	        backgroundColor: "#26B99A",
	        data: [sep, ssep, sssep, apmp, pmp, astep, step, assep, msp, jap, iap, sep2, sip, ssep2, sssep2, bap, pep, 
        hap, hep, hsp, mep, samp, sap, siap, hip]
	      }]
	    },
	
	    options: {
	      scales: {
	        yAxes: [{
	          ticks: {
	            beginAtZero: true
	          }
	        }]
	      }
	    }
	  });
  }
  
  
  var theme = {
      color: [
          '#26B99A', '#34495E', '#BDC3C7', '#3498DB',
          '#9B59B6', '#8abb6f', '#759c6a', '#bfd3b7'
      ],

      title: {
          itemGap: 8,
          textStyle: {
              fontWeight: 'normal',
              color: '#408829'
          }
      },

      dataRange: {
          color: ['#1f610a', '#97b58d']
      },

      toolbox: {
          color: ['#408829', '#408829', '#408829', '#408829']
      },

      tooltip: {
          backgroundColor: 'rgba(0,0,0,0.5)',
          axisPointer: {
              type: 'line',
              lineStyle: {
                  color: '#408829',
                  type: 'dashed'
              },
              crossStyle: {
                  color: '#408829'
              },
              shadowStyle: {
                  color: 'rgba(200,200,200,0.3)'
              }
          }
      },

      dataZoom: {
          dataBackgroundColor: '#eee',
          fillerColor: 'rgba(64,136,41,0.2)',
          handleColor: '#408829'
      },
      grid: {
          borderWidth: 0
      },

      categoryAxis: {
          axisLine: {
              lineStyle: {
                  color: '#408829'
              }
          },
          splitLine: {
              lineStyle: {
                  color: ['#eee']
              }
          }
      },

      valueAxis: {
          axisLine: {
              lineStyle: {
                  color: '#408829'
              }
          },
          splitArea: {
              show: true,
              areaStyle: {
                  color: ['rgba(250,250,250,0.1)', 'rgba(200,200,200,0.1)']
              }
          },
          splitLine: {
              lineStyle: {
                  color: ['#eee']
              }
          }
      },
      timeline: {
          lineStyle: {
              color: '#408829'
          },
          controlStyle: {
              normal: {color: '#408829'},
              emphasis: {color: '#408829'}
          }
      },

      k: {
          itemStyle: {
              normal: {
                  color: '#68a54a',
                  color0: '#a9cba2',
                  lineStyle: {
                      width: 1,
                      color: '#408829',
                      color0: '#86b379'
                  }
              }
          }
      },
      map: {
          itemStyle: {
              normal: {
                  areaStyle: {
                      color: '#ddd'
                  },
                  label: {
                      textStyle: {
                          color: '#c12e34'
                      }
                  }
              },
              emphasis: {
                  areaStyle: {
                      color: '#99d2dd'
                  },
                  label: {
                      textStyle: {
                          color: '#c12e34'
                      }
                  }
              }
          }
      },
      force: {
          itemStyle: {
              normal: {
                  linkStyle: {
                      strokeColor: '#408829'
                  }
              }
          }
      },
      chord: {
          padding: 4,
          itemStyle: {
              normal: {
                  lineStyle: {
                      width: 1,
                      color: 'rgba(128, 128, 128, 0.5)'
                  },
                  chordStyle: {
                      lineStyle: {
                          width: 1,
                          color: 'rgba(128, 128, 128, 0.5)'
                      }
                  }
              },
              emphasis: {
                  lineStyle: {
                      width: 1,
                      color: 'rgba(128, 128, 128, 0.5)'
                  },
                  chordStyle: {
                      lineStyle: {
                          width: 1,
                          color: 'rgba(128, 128, 128, 0.5)'
                      }
                  }
              }
          }
      },
      gauge: {
          startAngle: 225,
          endAngle: -45,
          axisLine: {
              show: true,
              lineStyle: {
                  color: [[0.2, '#86b379'], [0.8, '#68a54a'], [1, '#408829']],
                  width: 8
              }
          },
          axisTick: {
              splitNumber: 10,
              length: 12,
              lineStyle: {
                  color: 'auto'
              }
          },
          axisLabel: {
              textStyle: {
                  color: 'auto'
              }
          },
          splitLine: {
              length: 18,
              lineStyle: {
                  color: 'auto'
              }
          },
          pointer: {
              length: '90%',
              color: 'auto'
          },
          title: {
              textStyle: {
                  color: '#333'
              }
          },
          detail: {
              textStyle: {
                  color: 'auto'
              }
          }
      },
      textStyle: {
          fontFamily: 'Arial, Verdana, sans-serif'
      }
  };
  
  var cvPending;
  var phonePending;
  var examsPending;
  var hrPending;
  var technicalPending;
  var presentationPending;
function pieGraphPendingAnalysis(){
  var echartPieCollapse = echarts.init(document.getElementById('echart_pie2'), theme);
  echartPieCollapse.setOption({
    tooltip: {
      trigger: 'item',
      formatter: "{a} <br/>{b} : {c} ({d}%)"
    },
    legend: {
      x: 'center',
      y: 'bottom',
      data: ['CV', 'Phone', 'Exams', 'HR', 'Technical', 'Presentation']
    },
    toolbox: {
      show: true,
      feature: {
        magicType: {
          show: true,
          type: ['pie', 'funnel']
        },
        restore: {
          show: true,
          title: "Restore"
        },
        saveAsImage: {
          show: true,
          title: "Save Image"
        }
      }
    },
    calculable: true,
    series: [{
      name: 'Area Mode',
      type: 'pie',
      radius: [25, 90],
      center: ['50%', 170],
      roseType: 'area',
      x: '50%',
      max: 40,
      sort: 'ascending',
      data: [{
        value: cvPending,
        name: 'CV'
      }, {
        value: phonePending,
        name: 'Phone'
      }, {
        value: examsPending,
        name: 'Exams'
      }, {
        value: hrPending,
        name: 'HR'
      }, {
        value: technicalPending,
        name: 'Technical'
      }, {
        value: presentationPending,
        name: 'Presentation'
      }]
    }]
  });
  
  }
</script>
<!-- /Chart.js -->            
<script> 	
  	
  $(document).ready(function() {

	//Donut Chart For Sources
	var irrelevant,outOfCountry,interest,language,culture,communicationSkills,expectedSalary,gender,
	overqualified,age,attitude,technicalCompetence;
	function pieChartReasonsOfFailure(){
    Morris.Donut({
      element: 'graph_donut',
      data: [
        {label: 'Irrelevant Experience', value: irrelevant},
        {label: 'Out of the Country', value: outOfCountry},
        {label: 'Interest', value: interest},
        {label: 'Language', value: language},
        {label: 'Culture', value: culture},
        {label: 'Communication skills', value: communicationSkills},
        {label: 'Expected salary', value: expectedSalary},
        {label: 'Gender', value: gender},
        {label: 'Overqualified', value: overqualified},
        {label: 'Age', value: age},
        {label: 'Attitude', value: attitude},
        {label: 'Technical competence', value: technicalCompetence}
      ],
      colors: ['#26B99A', '#34495E', '#759c6a', '#ff98DB', '#BDFFC7', '#9B59B6', '#8abb6f', 
      '#ACADAC','#3498DB', '#9B5900', '#8a006f', '#00ADAC','#ff98DB'],
      formatter: function (y) {
        return y + "%";
      },
      resize: true
    });
    }

    $MENU_TOGGLE.on('click', function() {
      $(window).resize();
    });
  });
  
  
   $(document).ready(function() {

    Morris.Donut({
      element: 'graph_donut2',
      data: [
        {label: 'Facebook', value: 25},
        {label: 'Wuzzuf', value: 40},
        {label: 'Referral', value: 25},
        {label: 'Linkedin', value: 10},
        {label: 'GUC- Employment fair', value: 35},
        {label: 'MSA- Employment fair', value: 5},
        {label: 'Company- website', value: 12},
        {label: 'American Chamber', value: 20},
        {label: 'SCAD GUC', value: 65}
      ],
      colors: ['#26B99A', '#34495E', '#759c6a', '#3498DB', '#BDFFC7', '#9B59B6', '#8abb6f', '#ACADAC','#ff98DB'],
      formatter: function (y) {
        return y + "%";
      },
      resize: true
    });

    $MENU_TOGGLE.on('click', function() {
      $(window).resize();
    });
  });
</script>
	
<script>
 var theme = {
         color: [
             '#26B99A', '#34495E', '#BDC3C7', '#3498DB',
             '#9B59B6', '#8abb6f', '#759c6a', '#bfd3b7'
         ],

         title: {
             itemGap: 8,
             textStyle: {
                 fontWeight: 'normal',
                 color: '#408829'
             }
         },

         dataRange: {
             color: ['#1f610a', '#97b58d']
         },

         toolbox: {
             color: ['#408829', '#408829', '#408829', '#408829']
         },

         tooltip: {
             backgroundColor: 'rgba(0,0,0,0.5)',
             axisPointer: {
                 type: 'line',
                 lineStyle: {
                     color: '#408829',
                     type: 'dashed'
                 },
                 crossStyle: {
                     color: '#408829'
                 },
                 shadowStyle: {
                     color: 'rgba(200,200,200,0.3)'
                 }
             }
         },

         dataZoom: {
             dataBackgroundColor: '#eee',
             fillerColor: 'rgba(64,136,41,0.2)',
             handleColor: '#408829'
         },
         grid: {
             borderWidth: 0
         },

         categoryAxis: {
             axisLine: {
                 lineStyle: {
                     color: '#408829'
                 }
             },
             splitLine: {
                 lineStyle: {
                     color: ['#eee']
                 }
             }
         },

         valueAxis: {
             axisLine: {
                 lineStyle: {
                     color: '#408829'
                 }
             },
             splitArea: {
                 show: true,
                 areaStyle: {
                     color: ['rgba(250,250,250,0.1)', 'rgba(200,200,200,0.1)']
                 }
             },
             splitLine: {
                 lineStyle: {
                     color: ['#eee']
                 }
             }
         },
         timeline: {
             lineStyle: {
                 color: '#408829'
             },
             controlStyle: {
                 normal: {color: '#408829'},
                 emphasis: {color: '#408829'}
             }
         },

         k: {
             itemStyle: {
                 normal: {
                     color: '#68a54a',
                     color0: '#a9cba2',
                     lineStyle: {
                         width: 1,
                         color: '#408829',
                         color0: '#86b379'
                     }
                 }
             }
         },
         map: {
             itemStyle: {
                 normal: {
                     areaStyle: {
                         color: '#ddd'
                     },
                     label: {
                         textStyle: {
                             color: '#c12e34'
                         }
                     }
                 },
                 emphasis: {
                     areaStyle: {
                         color: '#99d2dd'
                     },
                     label: {
                         textStyle: {
                             color: '#c12e34'
                         }
                     }
                 }
             }
         },
         force: {
             itemStyle: {
                 normal: {
                     linkStyle: {
                         strokeColor: '#408829'
                     }
                 }
             }
         },
         chord: {
             padding: 4,
             itemStyle: {
                 normal: {
                     lineStyle: {
                         width: 1,
                         color: 'rgba(128, 128, 128, 0.5)'
                     },
                     chordStyle: {
                         lineStyle: {
                             width: 1,
                             color: 'rgba(128, 128, 128, 0.5)'
                         }
                     }
                 },
                 emphasis: {
                     lineStyle: {
                         width: 1,
                         color: 'rgba(128, 128, 128, 0.5)'
                     },
                     chordStyle: {
                         lineStyle: {
                             width: 1,
                             color: 'rgba(128, 128, 128, 0.5)'
                         }
                     }
                 }
             }
         },
         gauge: {
             startAngle: 225,
             endAngle: -45,
             axisLine: {
                 show: true,
                 lineStyle: {
                     color: [[0.2, '#86b379'], [0.8, '#68a54a'], [1, '#408829']],
                     width: 8
                 }
             },
             axisTick: {
                 splitNumber: 10,
                 length: 12,
                 lineStyle: {
                     color: 'auto'
                 }
             },
             axisLabel: {
                 textStyle: {
                     color: 'auto'
                 }
             },
             splitLine: {
                 length: 18,
                 lineStyle: {
                     color: 'auto'
                 }
             },
             pointer: {
                 length: '90%',
                 color: 'auto'
             },
             title: {
                 textStyle: {
                     color: '#333'
                 }
             },
             detail: {
                 textStyle: {
                     color: 'auto'
                 }
             }
         },
         textStyle: {
             fontFamily: 'Arial, Verdana, sans-serif'
         }
     };
     
     
  var facebookPass,wuzzufPass,referralPass,linkedinPass,gucPass,msaPass;
  var companyWebsitePass,americanChamberPass,scadPass;
function donutGraphSourcesPass(){
	var echartDonut = echarts.init(document.getElementById('echart_donut'), theme);
     echartDonut.setOption({
       tooltip: {
         trigger: 'item',
         formatter: "{a} <br/>{b} : {c} ({d}%)"
       },
       calculable: true,
       legend: {
         x: 'center',
         y: 'bottom',
         data: ['Facebook', 'Wuzzuf', 'Referral', 'Linkedin', 'GUC- Employment fair', 'MSA- Employment fair',
         'Company- website', 'American Chamber','SCAD GUC']
       },
       toolbox: {
         show: true,
         feature: {
           magicType: {
             show: true,
             type: ['pie', 'funnel'],
             option: {
               funnel: {
                 x: '25%',
                 width: '50%',
                 funnelAlign: 'center',
                 max: 1548
               }
             }
           },
           restore: {
             show: true,
             title: "Restore"
           },
           saveAsImage: {
             show: true,
             title: "Save Image"
           }
         }
       },
       series: [{
         name: 'Access to the resource',
         type: 'pie',
         radius: ['35%', '55%'],
         itemStyle: {
           normal: {
             label: {
               show: true
             },
             labelLine: {
               show: true
             }
           },
           emphasis: {
             label: {
               show: true,
               position: 'center',
               textStyle: {
                 fontSize: '14',
                 fontWeight: 'normal'
               }
             }
           }
         },
         data: [{         
           value: facebookPass,
           name: 'Facebook'
         }, {
           value: wuzzufPass,
           name: 'Wuzzuf'
         }, {
           value: referralPass,
           name: 'Referral'
         }, {
           value: linkedinPass,
           name: 'Linkedin'
         }, {
           value: gucPass,
           name: 'GUC- Employment fair'
         }, {
         	value: msaPass,
         	name: 'MSA- Employment fair'
         }, {
         	value: companyWebsitePass,
         	name: 'Company- website'
         }, {
         	value: americanChamberPass,
         	name: 'American Chamber'
         }, {
         	value: scadPass,
         	name: 'SCAD GUC'
         }]
       }]
     });  
     }


//Pie Chart for Sources
	var facebook,wuzzuf,referral,linkedin,guc,msa,companyWebsite,americanChamber,scad;
	function donutChartSources(){
    var echartPie = echarts.init(document.getElementById('echart_pie'), theme);
     echartPie.setOption({
       tooltip: {
         trigger: 'item',
         formatter: "{a} <br/>{b} : {c} ({d}%)"
       },
       legend: {
         x: 'center',
         y: 'bottom',
         data: ['Facebook', 'Wuzzuf', 'Referral', 'Linkedin', 'GUC- Employment fair', 'MSA- Employment fair',
         'Company- website', 'American Chamber','SCAD GUC']
       },
       toolbox: {
          show: true,
          feature: {
            magicType: {
              show: true,
              type: ['pie', 'funnel']
            },
            restore: {
              show: true,
              title: "Restore"
            },
            saveAsImage: {
              show: true,
              title: "Save Image"
            }
          }
        },
       calculable: true,
       series: [{
         name: 'Source',
         type: 'pie',
         radius: '55%',
         center: ['50%', '48%'],
         data: [{
           value: facebook,
           name: 'Facebook'
         }, {
           value: wuzzuf,
           name: 'Wuzzuf'
         }, {
           value: referral,
           name: 'Referral'
         }, {
           value: linkedin,
           name: 'Linkedin'
         }, {
           value: guc,
           name: 'GUC- Employment fair'
         }, {
         	value: msa,
         	name: 'MSA- Employment fair'
         }, {
         	value: companyWebsite,
         	name: 'Company- website'
         }, {
         	value: americanChamber,
         	name: 'American Chamber'
         }, {
         	value: scad,
         	name: 'SCAD GUC'
         }]
       }]
     });
     }
</script>

</ui:define>
</ui:composition>		

</h:body>
</html>